PLEASE ADDRESS THE FOLLOWING FORMAT ISSUES:

PRESENTATION OF AUTHOR NAMES AND AFFILIATIONS. Each author's job title, departments, and street address should be reflected in  FOOTNOTES on the Title page. Where appropriate, AIAA membership status and AIAA paper number and conference information should also be included in the footnotes.

DIGITAL OBJECT IDENTIFIER (DOI). The DOI (Digital Object Identifier) should be incorporated into EVERY REFERENCE FOR WHICH IT IS AVAILABLE. The DOI permanently and unambiguously identifies published content (e.g., journal articles, books, chapters, data sets, etc.) and provides a link which remains fixed over time to help readers easily locate the published content. For more information on DOIs and their value, visit www.doi.org or www.crossref.org

RELEVANT FUNDING INFORMATION.  Authors are responsible for accurately reporting funding data relevant to their research. Please ensure that you have correctly entered all sources of funding and grant/award numbers for all authors of the manuscript in the funding data fields in ScholarOne AND   in your revised manuscript (prior to the acknowledgments and/or reference sections).

The Editors particularly desire your specific comments on technical content, overall value, relevancy, accuracy of computed results or experimental data, and revisions needed for conciseness, clarity, and/or completeness.
The paper under review introduces the Haskell based EDSL LIMA targeting fault-tolerant critical systems. Users build a model of their systems in terms of built in abstractions of hierarchal nested atoms and channels. The tool can be used to analyze the model using the  SALLY model checker. LIMA can automatically translate its model into a Sally model and also translate LIMA  properties into SALLY specifications that can be model checked. A code generator is used to generate  C code to implement the model.

DONE On Page 23 referencing Fig9 you should say more about the auto generated code. Like most auto generated code the variable names come of as a bit jarring when trying to figure out what is going on.

Also, when discussing auto generated code you might want to mention the certification challenges (DO 178C, …) that must be addressed if the LIMA is to be use in aerospace.

DONE The handler is discussed on page 24 but not really explained until later.

DONE The translation of the handler to Sally illustrated in Figure 14 needs a bit more explanation. It seems like Sally is using a language of S-expression much as they do in SMT Lib but a sentence or two to clarify things would be great.


DONE Pg 35 L 25  I am a bit confused by the definition of broadcast the accompanying text says it returns a set of calendar events which I understand would look like  \{ (e_i, t_i), (e_j, t_j), (e_k, t_k),….\} but it seems to be a set of messages. And the way it reads the m returned is the same m in the parameter of broadcast. It may be me, but please  clarify because I suspect I won’t be the only one confused.

DONE Pg 35 L 50. the broadcast operator that confused me above is used in a predicate. Its type is 2^E while I would expect a bool here.

DONE In the oral messages example,  an explanation of the fast majority vote algorithm implemented in Figure 22 is  needed as the implementation is a bit terse.


Pg 46 Figure 24 please explain the role of the PSU and acquisition modules.


The final case study of the airbus auto-brake system, the model abstracts away many details in order to do the analysis. There is not really point in generating code for this abstraction. I get the sense that some sort of B like refinement needs to be integrated into the tool so you can analyze an abstraction and the tool can help one refine the abstraction into something more realistic.  I would like to see the authors comment on their preferred solution to this abstraction gap between analyzable model and implementation.


Including an appendix with an introduction to the monadic syntax used throughout the paper would significantly increase readership. I doubt if many fault tolerance folks have exposure to this and it is not really possible to read the paper without knowing some.  Beyond the basics you need to explain  MapM and forM from Control.Monad because they are used  a lot.




Typos Identified

Pg 5 L 45-50. Rewrite that sentence. should probably read
“ …, but we designed an ADSL that makes significant advances toward it.”


Pg 10 L35  CPS —> CSP

Pg 13 L 46 A shown —> As shown
Pg 14 L 37   A shown —> As shown
Pg 16 L45    The last word seems garbled
Pg 31 L33   I believe the second occurrence of recv should read send

Pg 49 L57  re —> are
Pg 50 L15   an an —> an


Reviewer: 3

<b>Comments to the Author.</b> The Editors particularly desire your specific comments on technical content, overall value, relevancy, accuracy of computed results or experimental data, and revisions needed for conciseness, clarity, and/or completeness.
In general, this is a very well-written paper.  It is a very long paper.  I was hoping to find obvious ways to trim the paper without much success.  The ideas are well-presented, and the paper flows well.  I do doubt that systems engineers will be very excited about writing specifications and properties in a subset of Haskell, but perhaps they will like it better than Sally.

x Page 5, Line 44:  cut 'we have used' to make the sentence parse
x pg 6, ln 4: remove apostrophe in 'designer's'
x pg 6, ln 58: 'language'
x pg 8, ln 12: 'annotations'
x pg 8, ln 20: MILS-AADL, a derivative of SLIM, is . . . . DMILS-project [33].
x pg 8, ln 27: (RADL) [35] is a
x pg 8, ln 37: system, Radler, that
x ln 44: SysML [19] extends
x pg 9, ln 1:  for for
x pg 9, paragraph 4:  Many typos -- extra commas, missing 'an's, etc.
x ln 52: missing 'of'
x pg 10, line 56: 'Analysis'
x pg 12, line 26: . instead of ;
x line 37: 'looks'

pg 13: The last paragraph on this page is almost identical to the paragraph after Figure 3.  I'm going to assume this paragraph should be deleted.

x pg 14, ln 37: As shown
x ln 54: single
x pg 16, ln 16: broadcast are all
x line 34: into its own
x ln 43-45:  what is the gobbledygook?
x ln 58:  Doesn't parse well
x pg 17, ln 26:  gobbledygook
x pg 18, ln 48: remove 'and'
x pg 19, ln 12: (nominal)
x ln 18: etc.
x ln 43: as a component
x ln 45: in an ADSL
x pg 21, ln 38: Atoms are
x pg 23, ln 2: for the fault
x ln 9: allowing
x pg 28, ln 40: shorthand
x pg 30, ln 6: its
x pg 39, ln 52: set them up
x pg 42, ln 33: Figure
x ln 40: Figure
x ln 48: writes
x pg 45, ln 58: analysis are detailed
x Figure 25:  words too small in the figure

x pg 48, ln 37: Figure
x ln 46: extra space
x ln 56: failure
x ln 58: Given the correct-by-construction synthesis
x pg 49, ln 6-8:  Not sure how to parse this phrase
x ln 16: utilizes an
x ln 35: Figure 2
x ln 46: Although simpler, this . . . . the Byzantine
x ln 54: processes that
x ln 56: that are
x pg 50, ln 1: delete 'using'
x ln 4: in control
x pg 51 (and 52):  Sally should be capitalized throughout
x ln 45: process that
x pg 52, paragraph 2: many extra commas

Watch your references!  Almost all of them have mis-capitalizations and gobbledygook.
